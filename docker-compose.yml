version: "3.7"

services:
  telegram_db:
    image: postgres:13.6
    env_file:
      - ./server/configs/.env
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data
    ports:
      - 5432
  telegram_server:
    container_name: "telegram_server"
    restart: "no"
    env_file:
      - ./server/configs/.env
    build:
      context: ./server
    depends_on:
      - telegram_db
    environment:
      - TZ=Asia/Bishkek
      - NODE_ENV=production
      - PORT=4000
      - HOST=0.0.0.0
    ports:
      - 4000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./server:/src
      - /src/node_modules
    command: yarn start
  telegram_nginx:
    image: nginx
    restart: "no"
    container_name: "telegram_nginx"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - telegram_server
    links:
      - telegram_server
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./nginx/telegram-available:/etc/nginx/telegram-available
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./client/dist:/dist
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
