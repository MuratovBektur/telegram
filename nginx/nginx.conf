user  nginx;
worker_processes  auto;
worker_rlimit_nofile 90000;
pid        /var/run/nginx.pid;

error_log  /dev/stdout warn;

events {
    use                     epoll; # Метод выбора соединения
    worker_connections      20000; # максимальное количество соединений (количество ядер цпу) * worker_connections
    multi_accept               on; # Будет принимать максимально возможное количество соединений
}

http {
    include       /etc/nginx/mime.types;

    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log off;

    sendfile            on; # Метод отправки данных sendfile более эффективен, чем стандартный метод read+write
    keepalive_timeout   65; # Будет ждать 30 секунд перед закрытием keepalive соединения
    keepalive_requests  100; # Максимальное количество keepalive запросов от одного клиента

    tcp_nodelay on; # Будет отправлять заго-
    tcp_nopush  on; # ловки и начало файла в одном пакете

    reset_timedout_connection on; # Если клиент перестал читать отвечать, Nginx будет сбрасывать соединение с ним
    client_body_timeout       10; # Будет ждать 10 секунд тело запроса от клиента, после чего сбросит соединение
    send_timeout               2; # Если клиент прекратит чтение ответа, Nginx подождет 2 секунды и сбросит соединение
    client_max_body_size      1m; # В этом случае сервер не будет принимать запросы размером более 1Мб

    # reduce the data that needs to be sent over network -- for testing environment
    gzip on;
    # gzip_static on;
    gzip_min_length 10240;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    open_file_cache max=200000 inactive=20s; # Определяет максимальное количество файлов, информация о которых будет содержаться в кеше
    open_file_cache_valid 30s;               # Определяет через какое время информация будет удалена из кеша
    open_file_cache_min_uses 2;              # Будет кешировать информацию о тех файлах, которые были использованы хотя бы 2 раза
    open_file_cache_errors on;               # Будет кешировать информацию об отсутствующих файлах

    proxy_cache_path /tmp/nginx levels=1:2 keys_zone=all:32m max_size=5G inactive=60m;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_background_update on;

    include       /etc/nginx/telegram-available/*;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
 
}
